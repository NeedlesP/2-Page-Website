:root {
    --size: 45vw;
  }
  html {
    font-family: Source Code Pro, sans-serif;
    box-sizing: border-box;
  }
  p{
    transform: translateX(90vw);
  }
  a{
    color: rgb(0, 179, 179);
  }
  a:hover{
    color: aquamarine ;
  }
  a:active{
    color: azure;
  }
  * {
    box-sizing: inherit;
  }
  body {
    line-height: 1.5;
    height: 100vh;
    margin: 0;
    overflow: hidden;
    background: #000;
    color: whitesmoke;
    font-size: .875rem;
    padding: 1rem;
  }
  .colors {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
  }
  
  .color {
    position: absolute;
    width: var(--size);
    height: var(--size);
    left: 0;
    right:0;
    top: 0;
    bottom: 0;
    margin: auto;
    mix-blend-mode: screen;
    border-radius: 50%;
    transition: transform 1s, border-radius 1s, color .5s;
  }
  .r {
    background: #f00;
  }
  .g {
    background: #0f0;
  }
  .b {
    background: #00f; 
  }
  .panel {
    position: absolute;
    height: 100vh;
    width: 100%;
    top: 0;
    left: 0;
  }
  .panel label {  
    position: absolute;
    padding: 1vw;
  }
  label > span {
    display: block;
  }
  .label-r {
    color: white;
    background: red;
    top: 50%;
    left: 50%;
    transform: translateY(calc(-0.75 * var(--size))) translateX(calc(-0.75 * var(--size)));
  }
  .label-g {
    background: lime;
    color: black;
    top: 50%;
    right: 50%;
    transform: translateY(calc(-0.75 * var(--size))) translateX(calc(0.75 * var(--size)));
  }
  .label-b {color: white;
    background: blue;
    bottom: 50%;
    left: 50%;
    transform: translateY(calc(0.75 * var(--size))) translateX(calc(-0.475 * var(--size)));
  
  }
  .decompose:checked ~ .colors .r {
    transform: translate3d(-25%, -25%, 0);
    border-radius: 0 50% 50% 50%;
  }
  .decompose:checked ~ .colors .g {
    transform: translate3d(25%, -25%, 0);
    border-radius: 50% 0 50% 50%;
  }
  .decompose:checked ~ .colors .b {
    transform: translate3d(0, 25%, 0);
    border-radius: 50% 50% 50% 0;
  }
  input[type="checkbox"],
  label[for=decompose] {
    position: relative;
    z-index: 1;
  }
  .result {
    font-size: 1rem;
    bottom: .5rem;
    left: 0.5rem;
    background: black;
    position: absolute;
    z-index: 1;
    padding: .5rem;
  }
  .result div {
    margin-bottom: .5rem;
  }
  .result div + div {
    padding-left: 3ch;
    margin: 0;
  }
  .result [class*=r] {
    background: red;
  }
  .i16 {
    display: inline-block;
    width: 2ch;
  }
  .result span {
    display: inline-block;
    width: 4ch;
    text-align: center;
  }
  .result [class*=g] {
    background: lime;
    color: black;
  }
  .result [class*=b] {
    background: blue;
  }
  
  @media screen and (min-width:50em) and (min-height:50em) {
    :root {
      --size: 35em;
    }
  }
  @media screen and (min-width:50em) and (max-height:50em) {
    :root {
      --size: 60vh;
    }
  }